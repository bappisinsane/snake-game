app HyperGearHaven {
  wasp: {
    version: "^0.11.1"
  },
  title: "HyperGearHaven",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id       Int    @id @default(autoincrement())
    username String @unique
    password String
    games    Game[]
psl=}

entity Game {=psl
    id     Int  @id @default(autoincrement())
    score  Int
    user   User @relation(fields: [userId], references: [id])
    userId Int
psl=}

action createGame {
  fn: import { createGame } from "@server/actions.js",
  entities: [Game]
}

action updateGame {
  fn: import { updateGame } from "@server/actions.js",
  entities: [Game]
}

query getGames {
  fn: import { getGames } from "@server/queries.js",
  entities: [Game]
}

query getGame {
  fn: import { getGame } from "@server/queries.js",
  entities: [Game]
}

route GameRoute { path: "/game/:gameId", to: GamePage }
page GamePage {
  component: import { Game } from "@client/pages/Game.jsx",
  authRequired: true
}

route DashboardRoute { path: "/", to: DashboardPage }
page DashboardPage {
  component: import { Dashboard } from "@client/pages/Dashboard.jsx",
  authRequired: true
}